version: '3'

services:
    app:
        container_name: ${PREFIX}_${APP_CONTAINER_NAME}
        build: .        
        command: >
            sh -c "python manage.py makemigrations
            && python manage.py migrate
            && python manage.py shell < ./app/createdb/__init__.py
            && python manage.py runserver 0.0.0.0:8000"
                
        ports:
            - '${APP_PUBLIC_PORT}:8000'
        volumes:
            - .:/app # mount code in local vs code in docker

        restart: ${APP_CONTAINER_RESTART} #always

        env_file:
            - .env

        # environment:
        #     APP_ROOT_USER: ${APP_ROOT_USER}
        #     APP_ROOT_PASSWORD: ${APP_ROOT_PASSWORD}
        #     APP_ROOT_EMAIL: ${APP_ROOT_EMAIL}
        #     MARIADB_CONTAINER_NAME: ${MARIADB_CONTAINER_NAME}
        #     MARIADB_PORT: ${MARIADB_PORT}
        #     MARIADB_ROOT_USER: ${MARIADB_ROOT_USER}
        #     MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
        #     MARIADB_DATABASE: ${MARIADB_DATABASE}
        #     REDIS_CONTAINER_NAME: ${REDIS_CONTAINER_NAME}
        #     PHONGTRAN: 1994

        depends_on:
            - mariadb
            - redis


    app_celery_worker:
        container_name: ${PREFIX}_${APP_CONTAINER_NAME}_celery_worker
        build: .
        # command: celery -A ors_backend worker -B --scheduler django -l INFO
        
        command: celery -A django_api worker --loglevel=info
        restart: ${APP_CONTAINER_RESTART}
        volumes:
            - .:/app
        env_file:
            - .env
        depends_on:
            - app
            - mariadb
            - redis

    app_celery_beat:
        container_name: ${PREFIX}_${APP_CONTAINER_NAME}_celery_beat
        build: .
        # command: celery -A ors_backend worker -B --scheduler django -l INFO
        
        command: celery -A django_api beat -l info -S django
        restart: ${APP_CONTAINER_RESTART}
        volumes:
            - .:/app
        env_file:
            - .env
        depends_on:
            - app
            - mariadb
            - redis


    mariadb:
        # Image Version: 1:10.5.9+maria~focal
        image: mariadb
        container_name: ${PREFIX}_${MARIADB_CONTAINER_NAME}
        ports:
            - ${MARIADB_PUBLIC_PORT}:${MARIADB_PORT}
        # command: --default-authentication-plugin=mysql_native_password
        restart: ${MARIADB_CONTAINER_RESTART}
        environment:
            MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
            # Auto Create DB
            MYSQL_DATABASE: ${MARIADB_DATABASE}

        volumes:
            - ./volumes_mysql:/var/lib/mysql
            - ./volumes_mysql/scripts:/var/www/scripts # Run: source /var/www/scripts/xxx.sql

    mariadb2:
        # Image Version: 1:10.5.9+maria~focal
        image: mariadb
        container_name: ${PREFIX}_${MARIADB_CONTAINER_NAME}_2
        ports:
            - 3308:3306
        # command: --default-authentication-plugin=mysql_native_password
        restart: ${MARIADB_CONTAINER_RESTART}
        environment:
            MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
            # Auto Create DB
            MYSQL_DATABASE: ${MARIADB_DATABASE}

        volumes:
            - ./volumes_mysql_2:/var/lib/mysql
            - ./volumes_mysql_2/scripts:/var/www/scripts # Run: source /var/www/scripts/xxx.sql
    
    phpmyadmin:
        # Image Version: 5.1.0
        image: phpmyadmin/phpmyadmin
        container_name: ${PREFIX}_${PHPMYADMIN_CONTAINER_NAME}
        # links:
        #     - mariadb
        environment:
            PMA_HOST: mariadb
            # PMA_PORT: ${MARIADB_PORT}
            PMA_ARBITRARY: 1
            UPLOAD_LIMIT: 300M
            # MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
        restart: ${PHPMYADMIN_CONTAINER_RESTART}
        ports:
            - ${PHPMYADMIN_PUBLIC_PORT}:80
        depends_on:
            - mariadb

    redis:
        # Image Version: 6.2.6
        image: "redis:6.2.6"
        container_name: ${PREFIX}_${REDIS_CONTAINER_NAME}
        depends_on:
            - mariadb

    jupyter:
        container_name: ${PREFIX}_jupyter
        build: .
        command: >
            sh -c "jupyter notebook --allow-root --ip=0.0.0.0"
        ports:
            - ${JUPYTER_PUBLIC_PORT}:8888
        env_file:
            - .env
        volumes:
            - .:/app




# networks: # Sử dụng network đã có sẵn
#     default:
#         external:
#             name: mysql_default
# https://docs.docker.com/compose/networking/
networks:
    default:
        external: false
        name: ${NETWORK}